{
  "swagger": "2.0",
  "apis": ["http://localhost:5000"],
  "swaggerDefinition": {
    "info": {
      "description": "API Documentation for MyShop Applications",
      "version": "1.0.0",
      "title": "Doc API - MyShop",
      "contact": {
        "name": "Yasniel Fajardo Egues",
        "url": "https://infsoft.home.blog"
      }
    },
    "host": "petstore.swagger.io",
    "basePath": "/v2",
    "tags": [
      {
        "name": "user",
        "description": "Everything about user"
      },
      {
        "name": "product",
        "description": "Access to Products"
      },
      {
        "name": "category",
        "description": "Access to Category"
      },
      {
        "name": "shopping",
        "description": "Access to Shopping"
      }
    ],
    "schemes": ["https", "http"],
    "paths": {
      "/user": {
        "post": {
          "tags": ["user"],
          "summary": "Create user",
          "description": "This can only be done by the logged in user.",
          "operationId": "createUser",
          "produces": ["application/json"],
          "consumes": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/login": {
        "get": {
          "tags": ["user"],
          "summary": "Logs user into the system",
          "description": "",
          "operationId": "loginUser",
          "produces": ["application/json"],
          "consumes": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "The user name for login",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for login in clear text",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "string"
              }
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      },
      "/user/{userId}": {
        "get": {
          "tags": ["user"],
          "summary": "Get user by user name",
          "description": "",
          "operationId": "getUserUserId",
          "produces": ["application/json"],
          "consumes": ["application/json"],
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": ["user"],
          "summary": "Updated user",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "produces": ["application/xml", "application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "name that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": ["user"],
          "summary": "Delete user",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "produces": ["application/xml", "application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be deleted",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "accessToken": {
        "type": "apiKey",
        "name": "accessToken",
        "in": "header"
      }
    },
    "definitions": {
      "Category": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "rol": {
            "type": "integer",
            "description": "User Rol [0=PUBLIC, 1=ADMIN, 2=AUTHENTICATE]",
            "enum": [0, 1, 2]
          },
          "shoppings": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Shopping"
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "required": ["name", "price", "amount"],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "shoppings": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Shopping"
            }
          },
          "category": {
            "type": "object",
            "$ref": "#/definitions/Category"
          }
        }
      },
      "Shopping": {
        "type": "object",
        "required": ["userId", "productId", "paymentType"],
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "$ref": "#/definitions/User"
          },
          "product": {
            "type": "object",
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  }
}
